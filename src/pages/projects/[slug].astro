---
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const projects = (await getCollection('projects')).map((p) => ({
    params: { slug: p.slug },
    props: { ...p.data, render: p.render },
  }));

  return projects;
}
import BaseLayout from '@/layouts/BaseLayout.astro';
const { props, params } = Astro;
const { Content } = await props.render();
const posts = await Promise.all(
  (
    await getCollection(
      'posts',
      (entry) => entry.data.project.slug === params.slug,
    )
  ).map(async (m) => {
    const { Content } = await m.render();
    return { ...m, Content, ["data.date"]: new Date(m.data.date).getTime() as number };
  }),
);
const orderedPosts = posts.sort((a, b) => {
  return a["data.date"] - b["data.date"];
});
---

<BaseLayout title={props.title}>
  <h1>{props.title}</h1>
  <p>{props.description}</p>
  <Content />
  {orderedPosts.map((post) => (
    <hr />
    <h1>{post.data.title}</h1>
      <p class="date-placeholder">{post.data.date}</p>
    <post.Content />
  ))}
</BaseLayout>
<script>
    document.addEventListener('DOMContentLoaded', () => {
      const datePlaceholders = document.querySelectorAll('.date-placeholder');
      [...datePlaceholders]
        .forEach((placeholder: Element) => {
          placeholder.textContent = new Intl.DateTimeFormat(navigator.languages[0], { dateStyle: 'full' }).format(new Date(Number(placeholder.textContent)));
        });
    });
  </script>